name: CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches:
    - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, staging]
    environment: Staging
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    
    # Setup Go
    - name: Setup Go environment
      uses: actions/setup-go@v3.3.0

      with:
        go-version: '1.19.2' # The Go version to download (if necessary) and use.
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go mod tidy
        go get -u golang.org/x/lint/golint
        
    # Lint and vet
    - name: Lint and vet
      run: |
        go vet ./...
        golint ./...
        
    # Run testing on the code
    - name: Run testing
      run: go test ./...
        
    # Run build of the application
    - name: Run build
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{secrets.SSH_HOST}}
        key: ${{secrets.SSH_KEY}}
        username: ${{secrets.SSH_USER}}
        script: |
          cd ~/home/pi/hs-wildy/
          git pull origin master
          cd src
          go build . 

  # The "deploy" workflow
  deploy:
    # The type of runner that the job will run on
    runs-on: [self-hosted, staging]
    environment: Staging
    
    needs: [build] # Only run this workflow when "build" workflow succeeds
    if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }} # Only run this workflow if it is master branch on push event
    
    steps:
    
      # Deploy to staging
      - name: Deploy to staging
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{secrets.SSH_HOST}}
          key: ${{secrets.SSH_KEY}}
          username: ${{secrets.SSH_USER}}
          script: /home/pi/hs-wildy/src/src
